// backend/prisma/schema.prisma

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model MenuCategory {
  id        String     @id @default(cuid())
  name      String     @unique
  iconName  String? // Lucide icon key veya SVG path
  menuItems MenuItem[] // Bu kategoriye ait menü öğeleri
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Table {
  id                String      @id @default(cuid())
  number            Int         @unique
  capacity          Int
  name              String?
  status            TableStatus @default(AVAILABLE) // AVAILABLE, OCCUPIED, RESERVED, DIRTY
  orders            Order[]
  currentOrderId    String? // Store the ID of the current open or in_progress order
  currentOrderTotal Decimal?    @db.Decimal(10, 2) // Store the total of the current order for quick display
  createdAt         DateTime    @default(now())
  updatedAt         DateTime    @updatedAt
}

model MenuItem {
  id                   String                 @id @default(cuid())
  name                 String                 @unique
  description          String?
  price                Decimal                @db.Decimal(10, 2)
  imageUrl             String?
  dataAiHint           String? // For AI image search
  categoryId           String
  category             MenuCategory           @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  createdAt            DateTime               @default(now())
  updatedAt            DateTime               @updatedAt
  availableModifiers   Modifier[]             @relation("MenuItemAvailableModifiers")
  defaultPrinterRoleId String?
  defaultPrinterRole   PrinterRoleDefinition? @relation("MenuItemToPrinterRoleDefinition", fields: [defaultPrinterRoleId], references: [id], onDelete: SetNull, onUpdate: Cascade)
  orderItems           OrderItem[] // Bu menü öğesini içeren sipariş kalemleri
}

model Modifier {
  id                      String     @id @default(cuid())
  name                    String     @unique
  priceChange             Decimal    @db.Decimal(10, 2)
  menuItemsWhereAvailable MenuItem[] @relation("MenuItemAvailableModifiers")
  createdAt               DateTime   @default(now())
  updatedAt               DateTime   @updatedAt
}

model Order {
  id          String      @id @default(cuid())
  tableId     String
  table       Table       @relation(fields: [tableId], references: [id])
  items       OrderItem[]
  status      OrderStatus @default(OPEN)
  subtotal    Decimal     @db.Decimal(10, 2)
  taxRate     Decimal     @db.Decimal(5, 4) // e.g., 0.08 for 8%
  taxAmount   Decimal     @db.Decimal(10, 2)
  totalAmount Decimal     @db.Decimal(10, 2)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model OrderItem {
  id                String   @id @default(cuid())
  orderId           String
  order             Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  menuItemId        String
  menuItem          MenuItem @relation(fields: [menuItemId], references: [id], onDelete: Restrict) // Sipariş varsa menü öğesi silinmemeli
  menuItemName      String // Denormalized for easy display on bills/KOTs
  quantity          Int
  unitPrice         Decimal  @db.Decimal(10, 2) // Price at the time of order
  selectedModifiers Json? // JSON array of selected modifier objects { id, name, priceChange }
  specialRequests   String?
  totalPrice        Decimal  @db.Decimal(10, 2) // quantity * (unitPrice + sum of modifier priceChanges)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

enum OrderStatus {
  OPEN
  IN_PROGRESS
  DONE
  PAID
  CANCELLED
}

enum TableStatus {
  AVAILABLE
  OCCUPIED
  RESERVED
  DIRTY
}

model PrinterRoleDefinition {
  id          String     @id @default(cuid())
  roleKey     String     @unique // e.g., KITCHEN_KOT, BAR_MAIN
  displayName String // e.g., Main Kitchen Printer, Bar Drinks
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  menuItems   MenuItem[] @relation("MenuItemToPrinterRoleDefinition")
  // menuCategories MenuCategory[] @relation("CategoryToPrinterRoleDefinition") // Bu satır kaldırıldı
}
